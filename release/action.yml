name: 'Release action'
description: 'Change a github release draft option to false'
inputs:
  gh_token:
    description: 'Github token used to upload package'
    required: true
  pypi_token:
    description: 'Pypi token used to publish the wheels release'
    required: false
    default: ''
outputs:
  draft-check:
    description: 'Boolean to check if the release draft exists'
    value: ${{ steps.draft-check.outputs.draft }}
runs:
  using: 'composite'    
  steps:
  #- uses: actions/checkout@main
  #  with: 
  #    fetch-depth: 0

  - name: Install PyGitHub
    run: pip3 install PyGithub
    shell: bash

  - name: Check if draft exists
    id: draft-check
    env: 
      GH_TOKEN: ${{ inputs.gh_token }}
      GIT_REPO: ${{ github.repository }}
    run: |
      cp ${{github.action_path}}/draftcheck .
      python3 draftcheck
      rm draftcheck
    shell: bash

  - name: Publish
    #if: steps.draft-check.outputs.draft == 'true' && github.event.pull_request.merged == true
    if: steps.draft-check.outputs.draft == 'true'
    env: 
      GH_TOKEN: ${{ inputs.gh_token }}
    run: gh release edit v$(cat VERSION) --draft=false
    shell: bash

  - name: Download wheels
    #if: inputs.pypi_token != '' && steps.draft-check.outputs.draft == 'true' && github.event.pull_request.merged == true
    if: inputs.pypi_token != '' && steps.draft-check.outputs.draft == 'true'
    env: 
      GH_TOKEN: ${{ inputs.gh_token }}
    run: gh release download v$(cat VERSION) --pattern '*.whl' --dir 'dist/'
    shell: bash

  - name: Publish packages
    #if: inputs.pypi_token != '' && steps.draft-check.outputs.draft == 'true' && github.event.pull_request.merged == true
    if: inputs.pypi_token != '' && steps.draft-check.outputs.draft == 'true'
    uses: pypa/gh-action-pypi-publish@release/v1
    with:
      user: __token__
      password: ${{ inputs.pypi_token }}
      skip_existing: true
      verbose: true
