name: 'Utility action'
description: 'Check if the PR is intended for release. Format code with clang linter and commit the changes.'
outputs:
  isRelease:
    description: 'Boolean to check if the PR is a release'
    value: ${{ steps.isRelease.outputs.release }}
runs:
  using: 'composite'    
  steps:
  - uses: actions/checkout@main
    with: 
      fetch-depth: 0

  # Install python wrappers for gh
  - name: Install PyGitHub
    run: pip3 install PyGithub

  # Detect release
  - name: Check if PR is release
    id: isRelease
    working-directory: ${{github.action_path}}
    env: 
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GIT_MERGE_BASE: ${{ github.base_ref }}
      GIT_MERGE_HEAD: ${{ github.head_ref }}
      GIT_MERGE_COMMIT: ${{ github.sha }}
      GIT_REPO: ${{ github.repository }}
    run: python3 versioncheck

  # Code formatting with Clang linter
  - uses: DoozyX/clang-format-lint-action@v0.14
    with:
      source: '.'
      extensions: 'h,c,hpp,cpp'
      clangFormatVersion: 14
      inplace: True

  # Commit clang-format changes
  - uses: EndBug/add-and-commit@v4
    with:
        author_name: CI bot
        author_email: dev@featuremine.com
        message: 'Committing clang-format changes'
      env:
        GITHUB_TOKEN: ${{ secrets.UTILITY_COMMIT_TOKEN }}
