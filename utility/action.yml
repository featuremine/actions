name: 'Utility action'
description: 'Check if the PR is intended for release. Format code with clang linter and commit the changes.'
inputs:
  gh_token:
    description: 'Github token used to check release'
    required: true
  utility_token:
    description: 'Github token used to commit the changes'
    required: true
  mypy:
    description: 'Check Python files with mypy'
    type: boolean
    required: false
    default: false
outputs:
  release-check:
    description: 'Boolean to check if the PR is a release'
    value: ${{ steps.release-check.outputs.release }}
runs:
  using: 'composite'
  steps:
  - uses: actions/checkout@main
    with: 
      fetch-depth: 0
      ref: ${{ env.GITHUB_REF_NAME }}
      token: ${{ inputs.utility_token }}

  # Install python wrappers for gh
  - name: Install PyGitHub
    run: pip3 install PyGithub==1.58.0
    shell: bash

  # Detect release
  - name: Check if PR is release
    id: release-check
    env: 
      GH_TOKEN: ${{ inputs.gh_token }}
      GIT_MERGE_BASE: ${{ github.base_ref }}
      GIT_MERGE_HEAD: ${{ github.head_ref }}
      GIT_MERGE_COMMIT: ${{ github.sha }}
      GIT_REPO: ${{ github.repository }}
    run: |
      cp ${{github.action_path}}/versioncheck .
      python3 versioncheck
      rm versioncheck
    shell: bash

  - uses: tsuyoshicho/action-mypy@v3
    if: inputs.mypy == 'true'

  - name: Validate if clang format is required
    id: check-format
    run: |
      find . | grep -c -e '\.h$' -e '\.c$' -e '\.hpp$' -e '\.cpp$' && echo "::set-output name=format::true" || echo "::set-output name=format::false"
    shell: bash

  # Code formatting with Clang linter
  - uses: DoozyX/clang-format-lint-action@v0.14
    if: steps.check-format.outputs.format == 'true'
    with:
      source: '.'
      extensions: 'h,c,hpp,cpp'
      clangFormatVersion: 14
      inplace: True

  # Commit clang-format changes
  - uses: EndBug/add-and-commit@v9
    id: add-and-commit
    if: steps.check-format.outputs.format == 'true'
    with:
        author_name: CI bot
        author_email: dev@featuremine.com
        message: 'Committing clang-format changes'

  # Validate if we should fail this job
  - name: Check if PR is release
    if: steps.add-and-commit.outputs.committed == 'true'
    run: exit 1
    shell: bash
